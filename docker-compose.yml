version: '3'

services:
  prometheus:
    image: prom/prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - "${PWD}/config/prometheus:/etc/prometheus"
    depends_on:
      - alertmanager
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
       # --web.enable-lifecycle enables reloading new config, see: https://prometheus.io/docs/operating/security/
       # all other flags are as in https://github.com/prometheus/prometheus/blob/master/Dockerfile

  alertmanager:
    image: prom/alertmanager
    restart: always
    volumes:
      - "${PWD}/config/alertmanager:/etc/alertmanager"
    ports:
      - "9093:9093"
    depends_on:
      - prom2teams

  aws_metrics:
    build: aws_metrics
    restart: always
    volumes:
      - "${PWD}/aws_metrics/config/volume:/root/.aws"

  prom2teams:
    image: idealista/prom2teams:3.1.0
    volumes:
      - "${PWD}/config/prom2teams/config.ini:/opt/prom2teams/config.ini"
      - "${PWD}/config/prom2teams/alarm-template.j2:/opt/prom2teams/alarm-template.j2"
    ports:
      - "8089:8089"
    restart: always

  buildkite_metrics:
    image: reside/buildkite-agent-metrics
    restart: always
    env_file: buildkite.env
    command:
      - '-backend prometheus'
      - '-interval 30s'
